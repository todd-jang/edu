#Ohne Traefik
#version: '3.9'
#services:
 # web:
  #  build: .
   # command: python manage.py runserver 0.0.0.0:8000
   # volumes:
   #   - .:/code
   # ports:
    #  - "8000:8000"
    #depends_on:
    #  - db
 # db:
   # image: postgres:14
   # environment:
    # POSTGRES_DB: edu_db
    # POSTGRES_USER: edu_user
    # POSTGRES_PASSWORD: edu_pass
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data/
#volumes:
#  postgres_data:

#Django-App mit Traefik erfolgt elegant über Docker-Labels, 
#die Traefik automatisch erkennt. Dadurch kannst du dynamisches Routing
#(per Subdomain oder Pfad) ohne manuelles Traefik-Konfigurationschaos umsetzen.
version: '3.8' #für Docker Swarm oder klassische Compose-Umgebungen geeignet.

services:
  django:
    build:
      context: ./django_app
    container_name: django_app
    restart: always
    env_file:
      - ./django_app/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`example.com`)"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
    expose:
      - "8000"
    networks:
      - web

  web:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`static.example.com`)"
      - "traefik.http.services.web.loadbalancer.server.port=80"
    networks:
      - web

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - web

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8080:8080" # Dashboard-Zugriff
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      
    networks:
      - web
     
  nginx-static:
    image: nginx:alpine
    volumes:
      - ./staticfiles:/usr/share/nginx/html/static
      - ./media:/usr/share/nginx/html/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=PathPrefix(`/static`, `/media`)"
volumes:
  pgdata:
  static_volume:
  media_volume:

networks:
  web:
    external: false
